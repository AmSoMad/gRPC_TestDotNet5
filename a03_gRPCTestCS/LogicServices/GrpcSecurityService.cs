//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GrpcSecurity
{
    using Microsoft.AspNetCore.Builder;
    using Grpc.Core;
    using SoftBand.EntityManager;
    
    
    public partial class GrpcSecurityService
    {
        
        public static void ValidateUser(ServerCallContext context)
        {
            var token = context.RequestHeaders.GetValue("authorization");
            if (token != null && !ValidateToken(token))
            {
                string[] tokens = token.Split(' ');
                Metadata metadata = new Metadata
                {
                    { "token", tokens[0]}
                };
                throw new RpcException(new Status(StatusCode.Unauthenticated, "Unauthenticated"), metadata);
            }
            var user = context.GetHttpContext().User;
            if (!ValidateUser(user))
            {
                Metadata metadata = new Metadata
                {
                    { "user", user.Identity.Name == null ? "null" : user.Identity.Name }
                };
                throw new RpcException(new Status(StatusCode.PermissionDenied, "Permission denied"), metadata);
            }
        }
        
        public static bool ValidateToken(string token)
        {
            //토큰 인증을 구현하십시오.;
            return true;
        }
        
        public static bool ValidateUser(System.Security.Claims.ClaimsPrincipal user)
        {
            //사용자에 대한 인증을 구현하십시오.;
            return true;
        }
    }
}
